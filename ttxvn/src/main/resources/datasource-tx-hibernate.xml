<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<!-- <context:component-scan base-package="com.vsii.ttxvn.keywordsearching" /> -->

	<context:property-placeholder location="classpath:jdbc.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
	
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
	
	<!-- make sure you use transactional tables (InnoDB) instead of non-transactional (MyISAM) to helps Transaction is rolling back in case of exception -->
	<tx:advice id="ttxvnTxAdvice" transaction-manager="hibernateTransactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="Throwable"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Throwable"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="Throwable"/>
			<tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut  id="ttxvnAOPPoincut" expression="execution(* com.vsii.ttxvn.keywordsearching.service.*.*(..)) || execution(* com.vsii.ttxvn.keywordsearching.dao.*.*(..))"/>
		<aop:advisor advice-ref="ttxvnTxAdvice" pointcut-ref="ttxvnAOPPoincut"/>
	</aop:config>
	
	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource">
      <property name="driverClassName" value="${hibernate.connection.driver}" />
		<property name="url" value="${hibernate.connection.url}" />
		<property name="username" value="${hibernate.connection.user}" />
		<property name="password" value="${hibernate.connection.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100"/>
   	</bean>
   	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="com.vsii.ttxvn.keywordsearching.entity" />
      <property name="hibernateProperties">
         <props>
         	<prop key="hibernate.dialect">${hibernate.dialect}</prop>
         	<prop key="hibernate.max_fetch_depth">${hibernate.max.fetch.depth}</prop>
         	<!-- <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch.size}</prop> 
			<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch.size}</prop> --> 
            <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			 <prop key="hibernate.hbm2ddl.import_files">dbscript/quartz_mysql.sql, dbscript/ttxvn_12-Nov.sql</prop>
            <!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
         </props>
      </property>
   </bean>
   
   <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory" />
      <property name="nestedTransactionAllowed" value="true" />
   </bean>
   
</beans>